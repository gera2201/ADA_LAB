#include<stdio.h>
int G[10][10],visited[10],n,stack[10],x=-1,flag=0; 
void DFS(int i)
{
   int j;
   printf("%d\t",i);
   stack[++x]=i;
   visited[i]=1;
   for(j=0;j<n;j++)
   { if(!visited[j]&&G[i][j]==1)
      DFS(j);
     else if(visited[j]&&G[i][j]==1)
      for(int a=0;a<x;a++)
       if(stack[a]==j)
       { flag=1;
         return ;
       }
    }
   x--;
   printf("\n");
}
  
int main()
{
    int i,j;
    printf("Enter number of vertices:");
    scanf("%d",&n);
    
    printf("\nEnter adjecency matrix of the graph:\n");
    for(i=0;i<n;i++)
    {
        printf("Enter %d row\n",(i+1));
     for(j=0;j<n;j++)
     {
      scanf("%d",&G[i][j]);
     }
    }
    for(i=0;i<n;i++)
        visited[i]=0;
        printf("\n");
    DFS(0);
    
    for(int p=0;p<n;p++)
    { for(int q=0;q<n;q++)
       printf("%d  ",G[p][q]);
      printf("\n");
    }
    if(flag)
     printf("\nThe graph is cyclic.");
    else
     printf("\nThe graph is acylic");
     
     return 0;
}
